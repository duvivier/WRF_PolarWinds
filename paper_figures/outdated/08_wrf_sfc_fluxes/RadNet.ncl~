;**************************************
; PROGRAM DESCRIPTION: This script plots single panel plots of 
;                      diagnostic variables
; INPUT DATA: WRF output or RACM-WRF output post processed with wrfout-to-cf.ncl
;             and then made into yearly seasonal mean files
; OUTPUT DATA: One Panel plot of specified variable
; Note: This can be looped with 01_wrfsinglepanel_akd_seasonal.csh 
;       to evaluate at multiple hours or variables
; CREATOR: Matt Higgins
;          Modified by Alice DuVivier - April 2012
;***************************************
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_csm.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl"
load "$NCARG_ROOT/lib/ncarg/nclscripts/csm/shea_util.ncl"
;***************************************
begin
; MANUAL INPUTS - for testing purposes
date = "2015-05-21_18-00"
varcode = "RadNet"                  ; SH, LH, TurbNet, SWNet, LWNet,RadNet,ENet, T_sfc, T_2m 
tag0 = "PW-05-40-M-bn"
tag1 = "PW-05-60-M-bn"
tag2 = "PW-10-40-M-bn"
tag3 = "PW-25-40-M-bn"
tag4 = "PW-50-40-M-bn"

; BEGIN SCRIPT
; set directory
  dir = "/data/duvivier/polar_winds/DATA/"
; set outdir and fout names
outdir = "./"

; plot whole domain:
fout2  = outdir+varcode+"_pw_wrf_resolution_comparison_refined_"+date

print("Running Four panel for " + date)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
; Set preferences for vartypes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  if (varcode.eq."T_sfc") then
    vartitle1 = "Temperature at surface"
    invar1 = "T_sfc"
    cmaptype = "temperature"
  end if
  if (varcode.eq."T_2m") then
    vartitle1 = "Temperature at 2m"
    invar1 = "T_2m"
    cmaptype = "temperature"
  end if
  if (varcode.eq."SH") then
    vartitle1 = "Sensible Heat Flux at Sur"
    invar1 = "SH"
    cmaptype = "netflux"
  end if
  if (varcode.eq."LH") then
    vartitle1 = "Latent Heat Flux at Sur"
    invar1 = "LH"
    cmaptype = "netflux"
  end if
  if (varcode.eq."TurbNet")then
    vartitle1 = "Net turbulent flux"
    invar1 = "SH"
    invar2 = "LH"
    cmaptype = "netflux"
  end if
  if (varcode.eq."SWNet")then
    vartitle1 = "Net SW radiative flux"
    invar1 = "SW_u"
    invar2 = "SW_d"
    cmaptype = "swflux"
  end if
  if (varcode.eq."LWNet")then
    vartitle1 = "Net LW radiative flux"
    invar1 = "LW_u"
    invar2 = "LW_d"
    cmaptype = "lwflux"
  end if
  if (varcode.eq."RadNet")then
    vartitle1 = "Net radiative flux"
    invar1 = "LW_u"
    invar2 = "LW_d"
    invar3 = "SW_u"
    invar4 = "SW_d"
    cmaptype = "netflux"
  end if
  if (varcode.eq."ENet")then
    vartitle1 = "Net Energy balance at surface"
    invar1 = "LW_u"
    invar2 = "LW_d"
    invar3 = "SW_u"
    invar4 = "SW_d"
    invar5 = "SH"
    invar6 = "LH"
    cmaptype = "netflux"
  end if

; Set the contour interval for each input variable   
  if (cmaptype.eq."temperature") then
    cmin1               = -16.
    cmax1               = 16.
    clev1               = 2.
    cmin2               = -7.
    cmax2               = 7.
    clev2               = 1.
    stride1             = 2                 ; label stride
    stride2             = 1                 ; label stride diff plot
    plotlines           = False              ; lines for reg plot
    difflines           = False              ; lines for diff plot
    cntype              = "AreaFill"      ; type of contour fill
    spreadstart1        = 2                 ; start at color
    spreadend1          = 65                ; end at color
    spreadstart2        = 67                ; start at color
    spreadend2          = 106 
    colormap            = "temp64_anoms.dave"
  end if
  if (cmaptype.eq."flux") then
    cmin1               =  -100.
    cmax1               =  100.
    clev1               =  10.
    cmin2               = -100.
    cmax2               =  100.
    clev2               =  10.
    stride1             = 2                 ; label stride
    stride2             = 2                 ; label stride diff plot
    plotlines           = False              ; lines for reg plot
    difflines           = False             ; lines for diff plot
    cntype              = "AreaFill"
    spreadstart1        = 2                 ; start at color
    spreadend1          = 254               ; end at color
    spreadstart2        = 2                 ; start at color
    spreadend2          = 254               ; end at color
    colormap            = "BlueYellowRed"
  end if
  if (cmaptype.eq."netflux") then
    cmin1               =  -300. ;-150.
    cmax1               =  300.  ;150.
    clev1               =  30.   ;15.
    cmin2               = -150.   ;-100.  ;-50.
    cmax2               =  150.   ;100.  ;50.
    clev2               =  15.    ;10.
    stride1             = 2                 ; label stride
    stride2             = 2                 ; label stride diff plot
    plotlines           = False              ; lines for reg plot
    difflines           = False             ; lines for diff plot
    cntype              = "AreaFill"
    spreadstart1        = 2                 ; start at color
    spreadend1          = 254               ; end at color
    spreadstart2        = 2                 ; start at color
    spreadend2          = 254               ; end at color
    colormap            = "BlueYellowRed"
  end if
  if (cmaptype.eq."turbflux") then
    cmin1               =  -150.
    cmax1               =  150.
    clev1               =  10.
    cmin2               = -50.
    cmax2               =  50.
    clev2               =  10.
    stride1             = 2                 ; label stride
    stride2             = 2                 ; label stride diff plot
    plotlines           = False              ; lines for reg plot
    difflines           = False             ; lines for diff plot
    cntype              = "AreaFill"
    spreadstart1        = 2                 ; start at color
    spreadend1          = 254               ; end at color
    spreadstart2        = 2                 ; start at color
    spreadend2          = 254               ; end at color
    colormap            = "BlueYellowRed"
  end if
  if (cmaptype.eq."radflux") then
    cmin1               =  -200. ;-400. ;-200.
    cmax1               =  200. ;400. ;200.
    clev1               =  20.  ;40.  ;10.
    cmin2               = -100. ;-200. ;-100.
    cmax2               =  100. ;200. ;100.
    clev2               =  10.  ;20.  ;10.
    stride1             = 2                 ; label stride
    stride2             = 2
    plotlines           = False              ; lines for reg plot
    difflines           = False             ; lines for diff plot
    cntype              = "AreaFill"
    spreadstart1        = 2                 ; start at color
    spreadend1          = 102               ; end at color
    spreadstart2        = 2                 ; start at color
    spreadend2          = 102               ; end at color
    colormap            = "BlWhRe"
  end if
  if (cmaptype.eq."lwflux") then
    cmin1               =  -150.
    cmax1               =  150.
    clev1               =  15.
    cmin2               = -150.
    cmax2               =  150.
    clev2               =  15.
    stride1             = 2                 ; label stride
    stride2             = 2
    plotlines           = False              ; lines for reg plot
    difflines           = False             ; lines for diff plot
    cntype              = "AreaFill"
    spreadstart1        = 2                 ; start at color
    spreadend1          = 102               ; end at color
    spreadstart2        = 2                 ; start at color
    spreadend2          = 102               ; end at color
    colormap            = "BlWhRe"
  end if
  if (cmaptype.eq."swflux") then
    cmin1               = -250. ; -500.
    cmax1               =  250. ;500.
    clev1               =  25.  ;50.
    cmin2               = -150. ;-300.
    cmax2               =  150. ;300.
    clev2               =  15.  ;30.
    stride1             = 2                 ; label stride
    stride2             = 2
    plotlines           = False              ; lines for reg plot
    difflines           = False             ; lines for diff plot
    cntype              = "AreaFill"
    spreadstart1        = 2                 ; start at color
    spreadend1          = 102               ; end at color
    spreadstart2        = 2                 ; start at color
    spreadend2          = 102               ; end at color
    colormap            = "BlWhRe"
  end if

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
; Data Processing
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;
; load in wrf files
;;;;;;;;;;
; Load in first file to compare
f0 = addfile(dir+tag0+"/wrfout-cf/wrf-"+date+"."+tag0+"-cf.nc","r")
hgt_0 = f0->Z_sfc
lat2d_0 = f0->lat
lon2d_0 = f0->lon
dims = dimsizes(lat2d_0)     ; get lat/lon dimensions from first domain
n_sn_0 = dims(0)              ; get south/north points
n_we_0 = dims(1)              ; get west/east points
delete(dims)

; Load in second file to compare
f1 = addfile(dir+tag1+"/wrfout-cf/wrf-"+date+"."+tag1+"-cf.nc","r")

; Load in third file to compare
f2 = addfile(dir+tag2+"/wrfto05km/wrfto05km."+date+"."+tag2+"-cf.nc","r")

; Load in fourth file to compare
f3 = addfile(dir+tag3+"/wrfto05km/wrfto05km."+date+"."+tag3+"-cf.nc","r")

; Load in fourth file to compare
f4 = addfile(dir+tag4+"/wrfto05km/wrfto05km."+date+"."+tag4+"-cf.nc","r")

;;;;;;;;;;
; load in wrf variables
;;;;;;;;;;
print("Loading "+varcode+" from each file")
ice0 = f0->SeaIce(0,:,:)  
; file 0
if (varcode.eq."T_sfc" .or. varcode.eq."T_2m" .or. varcode.eq."SH" .or. varcode.eq."LH")then
  var0 = f0->$invar1$(0,:,:)
  var1 = f1->$invar1$(0,:,:)
  var2 = f2->$invar1$(:,:)
  var3 = f3->$invar1$(:,:)
  var4 = f4->$invar1$(:,:)
end if
if (varcode.eq."TurbNet")then
  dum1 = f0->$invar1$(0,:,:)
  dum2 = f0->$invar2$(0,:,:)
  var0 = dum1+dum2
  copy_VarMeta(dum1,var0)
  delete([/dum1,dum2/])
  dum1 = f1->$invar1$(0,:,:)
  dum2 = f1->$invar2$(0,:,:)
  var1 = dum1+dum2
  copy_VarMeta(dum1,var1)
  delete([/dum1,dum2/])
  dum1 = f2->$invar1$(:,:)
  dum2 = f2->$invar2$(:,:)
  var2 = dum1+dum2
  copy_VarMeta(dum1,var2)
  delete([/dum1,dum2/])
  dum1 = f3->$invar1$(:,:)
  dum2 = f3->$invar2$(:,:)
  var3 = dum1+dum2
  copy_VarMeta(dum1,var3)
  delete([/dum1,dum2/])
  dum1 = f4->$invar1$(:,:)
  dum2 = f4->$invar2$(:,:)
  var4 = dum1+dum2
  copy_VarMeta(dum1,var4)
  delete([/dum1,dum2/])
end if
if (varcode.eq."SWNet" .or. varcode.eq."LWNet")then
  dum1 = f0->$invar1$(0,:,:)
  dum2 = f0->$invar2$(0,:,:)
  var0 = dum1-dum2
  copy_VarMeta(dum1,var0)
  delete([/dum1,dum2/])
  dum1 = f1->$invar1$(0,:,:)
  dum2 = f1->$invar2$(0,:,:)
  var1 = dum1-dum2
  copy_VarMeta(dum1,var1)
  delete([/dum1,dum2/])
  dum1 = f2->$invar1$(:,:)
  dum2 = f2->$invar2$(:,:)
  var2 = dum1-dum2
  copy_VarMeta(dum1,var2)
  delete([/dum1,dum2/])
  dum1 = f3->$invar1$(:,:)
  dum2 = f3->$invar2$(:,:)
  var3 = dum1-dum2
  copy_VarMeta(dum1,var3)
  delete([/dum1,dum2/])
  dum1 = f4->$invar1$(:,:)
  dum2 = f4->$invar2$(:,:)
  var4 = dum1-dum2
  copy_VarMeta(dum1,var4)
  delete([/dum1,dum2/])
end if
if (varcode.eq."RadNet")then
  dum1 = f0->$invar1$(0,:,:)
  dum2 = f0->$invar2$(0,:,:)
  dum3 = f0->$invar3$(0,:,:)
  dum4 = f0->$invar4$(0,:,:)
  var0 = (dum1-dum2)+(dum3-dum4)
  copy_VarMeta(dum1,var0)
  delete([/dum1,dum2,dum3,dum4/])
  dum1 = f1->$invar1$(0,:,:)
  dum2 = f1->$invar2$(0,:,:)
  dum3 = f1->$invar3$(0,:,:)
  dum4 = f1->$invar4$(0,:,:)
  var1 = (dum1-dum2)+(dum3-dum4)
  copy_VarMeta(dum1,var1)
  delete([/dum1,dum2,dum3,dum4/])
  dum1 = f2->$invar1$(:,:)
  dum2 = f2->$invar2$(:,:)
  dum3 = f2->$invar3$(:,:)
  dum4 = f2->$invar4$(:,:)
  var2 = (dum1-dum2)+(dum3-dum4)
  copy_VarMeta(dum1,var2)
  delete([/dum1,dum2,dum3,dum4/])
  dum1 = f3->$invar1$(:,:)
  dum2 = f3->$invar2$(:,:)
  dum3 = f3->$invar3$(:,:)
  dum4 = f3->$invar4$(:,:)
  var3 = (dum1-dum2)+(dum3-dum4)
  copy_VarMeta(dum1,var3)
  delete([/dum1,dum2,dum3,dum4/])
  dum1 = f4->$invar1$(:,:)
  dum2 = f4->$invar2$(:,:)
  dum3 = f4->$invar3$(:,:)
  dum4 = f4->$invar4$(:,:)
  var4 = (dum1-dum2)+(dum3-dum4)
  copy_VarMeta(dum1,var4)
  delete([/dum1,dum2,dum3,dum4/])
end if
if (varcode.eq."ENet")then
  dum1 = f0->$invar1$(0,:,:)
  dum2 = f0->$invar2$(0,:,:)
  dum3 = f0->$invar3$(0,:,:)
  dum4 = f0->$invar4$(0,:,:)
  dum5 = f0->$invar5$(0,:,:)
  dum6 = f0->$invar6$(0,:,:)
  var0 = (dum1-dum2)+(dum3-dum4)+(dum5+dum6)
  copy_VarMeta(dum1,var0)
  delete([/dum1,dum2,dum3,dum4,dum5,dum6/])
  dum1 = f1->$invar1$(0,:,:)
  dum2 = f1->$invar2$(0,:,:)
  dum3 = f1->$invar3$(0,:,:)
  dum4 = f1->$invar4$(0,:,:)
  dum5 = f1->$invar5$(0,:,:)
  dum6 = f1->$invar6$(0,:,:)
  var1 = (dum1-dum2)+(dum3-dum4)+(dum5+dum6)
  copy_VarMeta(dum1,var1)
  delete([/dum1,dum2,dum3,dum4,dum5,dum6/])
  dum1 = f2->$invar1$(:,:)
  dum2 = f2->$invar2$(:,:)
  dum3 = f2->$invar3$(:,:)
  dum4 = f2->$invar4$(:,:)
  dum5 = f2->$invar5$(:,:)
  dum6 = f2->$invar6$(:,:)
  var2 = (dum1-dum2)+(dum3-dum4)+(dum5+dum6)
  copy_VarMeta(dum1,var2)
  delete([/dum1,dum2,dum3,dum4,dum5,dum6/])
  dum1 = f3->$invar1$(:,:)
  dum2 = f3->$invar2$(:,:)
  dum3 = f3->$invar3$(:,:)
  dum4 = f3->$invar4$(:,:)
  dum5 = f3->$invar5$(:,:)
  dum6 = f3->$invar6$(:,:)
  var3 = (dum1-dum2)+(dum3-dum4)+(dum5+dum6)
  copy_VarMeta(dum1,var3)
  delete([/dum1,dum2,dum3,dum4,dum5,dum6/])
  dum1 = f4->$invar1$(:,:)
  dum2 = f4->$invar2$(:,:)
  dum3 = f4->$invar3$(:,:)
  dum4 = f4->$invar4$(:,:)
  dum5 = f4->$invar5$(:,:)
  dum6 = f4->$invar6$(:,:)
  var4 = (dum1-dum2)+(dum3-dum4)+(dum5+dum6)
  copy_VarMeta(dum1,var4)
  delete([/dum1,dum2,dum3,dum4,dum5,dum6/])
end if
print("Loaded variables")

if (varcode.eq."T_sfc")then
   ; convert to C
   var0 = var0-273.15
   var1 = var1-273.15
   var2 = var2-273.15
   var3 = var3-273.15
   var4 = var4-273.15 
end if

; mask above 500m
var0 = where(hgt_0.le.500.0, var0, var0@_FillValue)
var1 = where(hgt_0.le.500.0, var1, var1@_FillValue)
var2 = where(hgt_0.le.500.0, var2, var2@_FillValue)
var3 = where(hgt_0.le.500.0, var3, var3@_FillValue)
var4 = where(hgt_0.le.500.0, var4, var4@_FillValue)

; calculate differences
diff1 = var1 - var0
diff2 = var2 - var0
diff3 = var3 - var0
diff4 = var4 - var0

; assign 2d lat and lon attributes for plotting:
  var0@lat2d  = lat2d_0
  var0@lon2d  = lon2d_0
  copy_VarMeta(var0,var1)
  copy_VarMeta(var0,var2)
  copy_VarMeta(var0,var3)
  copy_VarMeta(var0,var4)
  ice0@lat2d  = lat2d_0
  ice0@lon2d  = lon2d_0
  diff1@lat2d = lat2d_0
  diff1@lon2d = lon2d_0
  copy_VarMeta(diff1,diff2)
  copy_VarMeta(diff1,diff3)
  copy_VarMeta(diff1,diff4)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
; Plotting
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
print("Making plots")
; set resources used for all plots
  res                             = True              ; plot mods desired
  res@gsnRightString              = ""
  res@gsnLeftString               = ""
  res@gsnFrame                    = False             ; Do not draw plot 
  res@gsnDraw                     = False             ; Do not advance fr
  res@gsnAddCyclic                = False             ; regional - not cyclic 
  res@mpProjection                = "Stereographic"   ; map projection
  res@mpCenterLonF                = -25. ;-40.              ; set the center lat/lon  ---set by akd for Greenland
  res@mpCenterLatF                = 65.  ;60.               ; -----set by akd for Greenland
  res@mpGridAndLimbOn             = True              ; Turn on lat/lon grid
  res@mpGridLineDashPattern       = 2                 ; Change dash pattern
  res@mpFillOn                    = True              ; Enables map fill
  res@mpGeophysicalLineColor      = "black"           ; Color of continents
  res@mpGeophysicalLineThicknessF = 0.75              ; Make continents thinner
  res@tiMainFontHeightF          = 0.025 ;0.014
  res@tiMainFontThicknessF       = 1.5
  res@lbLabelBarOn               = True ;False             ; turn off individual label bars

  ; contour res
  res1                           = res
  res1@cnFillMode                 = cntype
  res1@cnFillOn                   = True              ; turn on filled contours
  res1@gsnSpreadColors            = True              ; use full colormap
  res1@gsnSpreadColorStart        = spreadstart1      ; start at color specified for each variable above
  res1@gsnSpreadColorEnd          = spreadend1        ; end at color specified above
  res1@cnLevelSelectionMode       = "ManualLevels"    ; set manual contour
  res1@cnMinLevelValF             = cmin1             ; set min contour level specified above
  res1@cnMaxLevelValF             = cmax1             ; set max contour level specified above
  res1@cnLevelSpacingF            = clev1             ; set contour spacing specified above
  res1@cnLinesOn                  = plotlines         ; contour lines specified above
  res1@cnLineLabelsOn             = plotlines         ; line labels on specified above
  res1@cnMissingValFillColor      = "gray85"          ; missing value color
  res1@cnMissingValFillPattern    = 0                 ; fill in

  ; difference res
  res2                           = res
  res2@cnFillMode                 = cntype
  res2@cnFillOn                   = True              ; turn on filled contours
  res2@gsnSpreadColors            = True              ; use full colormap
  res2@gsnSpreadColorStart        = spreadstart2      ; start at color specified for each variable above
  res2@gsnSpreadColorEnd          = spreadend2        ; end at color specified above
  res2@cnLevelSelectionMode       = "ManualLevels"    ; set manual contour
  res2@cnMinLevelValF             = cmin2             ; set min contour level specified above
  res2@cnMaxLevelValF             = cmax2             ; set max contour level specified above
  res2@cnLevelSpacingF            = clev2             ; set contour spacing specified above
  res2@cnLinesOn                  = difflines         ; contour lines specified above
  res2@cnLineLabelsOn             = difflines         ; line labels on specified above
  res2@cnMissingValFillColor      = "gray85"          ; missing value color
  res2@cnMissingValFillPattern    = 0                 ; fill in

; set resources for sea ice overlay
res_ice                            = True               ; reset options
res_ice@gsnLeftString              = ""
res_ice@gsnRightString             = ""
res_ice@gsnFrame                   = False             ; Do not draw plot 
res_ice@gsnDraw                    = False             ; Do not advance fr
res_ice@cnInfoLabelOn              = False             ; Turn off info on contours at bottom
res_ice@cnFillOn                   = False             ; turn on filled contours
res_ice@cnLevelSelectionMode       = "ManualLevels"    ; set manual contour
res_ice@cnMinLevelValF             = 0.                ; set min contour level specified above
res_ice@cnMaxLevelValF             = 0.15              ; set max contour level specified above
res_ice@cnLevelSpacingF            = 0.15              ; set contour spacing specified above
res_ice@cnLinesOn                  = True              ; contour lines specified above
res_ice@cnLineLabelsOn             = False             ; line labels on specified above
res_ice@cnLineColor                = "black"
res_ice@cnLineThicknessF           = 2.0
res_ice@tiXAxisOn                  = False
res_ice@tiYAxisOn                  = False
res_ice@trGridType                 = "TriangularMesh"

  ; panel resources
  pnlres                            = True
  pnlres@txFontHeightF              = 0.01 ;0.013
  pnlres@gsnPaperOrientation        = "landscape"      ; landscape mode
  pnlres@gsnPanelLabelBar           = False ;True
;  pnlres@lbTitleString              = var0@units
;  pnlres@lbTitlePosition            = "Right"
;  pnlres@lbTitleDirection           = "Across"
;  pnlres@lbTitleJust                = "CenterLeft"
;  pnlres@lbTitleFontHeightF         = 0.0075
;  pnlres@lbLabelStride              = stride1
;  pnlres@lbLabelFontHeightF         = 0.0095
;  pnlres@pmLabelBarWidthF           = 0.65
;  pnlres@pmLabelBarHeightF          = 0.1
  pnlres@gsnMaximize                = True             ; fill the page

;;;;;;;;;
;; Denmark Strait Only plotted 
;;;;;;;;;
print("Plotting Denmark Strait")
wks = gsn_open_wks("ps" ,fout2)
additional_colors = (/"gray85","yellow", "purple", "red"/)
gsn_merge_colormaps(wks,colormap,additional_colors)
plot2 = new(5, graphic)

opts1 = res1
opts1@mpLimitMode                 = "LatLon"
opts1@mpMinLatF                   = 64.0
opts1@mpMaxLatF                   = 71.0
opts1@mpMinLonF                   = -35.0
opts1@mpMaxLonF                   = -15.0

opts2 = res2
opts2@mpLimitMode                 = "LatLon"
opts2@mpMinLatF                   = 64.0
opts2@mpMaxLatF                   = 71.0
opts2@mpMinLonF                   = -35.0
opts2@mpMaxLonF                   = -15.0

;;;;;;;;;;;;;
; Plot 0 
  opts1@tiMainString                = "W05-40"
  cplot0 = gsn_csm_contour_map(wks, var0, opts1) 
  iplot = gsn_csm_contour(wks,ice0,res_ice)
  overlay(cplot0,iplot)
  plot2(0) = cplot0

;;;;;;;;;;;;;
; Plot 1 
;;;;;;;;;;;;;
  opts2@tiMainString                = "W05-60 - W05-40"
  cplot1 = gsn_csm_contour_map(wks, diff1, opts2)    
  iplot = gsn_csm_contour(wks,ice0,res_ice)
  overlay(cplot1,iplot)
  plot2(1) = cplot1

;;;;;;;;;;;;;
; Plot 2 
;;;;;;;;;;;;;
  opts2@tiMainString                = "W10-40 - W05-40"
  cplot2 = gsn_csm_contour_map(wks, diff2, opts2) 
  iplot = gsn_csm_contour(wks,ice0,res_ice)
  overlay(cplot2,iplot)
  plot2(2) = cplot2

;;;;;;;;;;;;;
; Plot 3 
;;;;;;;;;;;;;
  opts2@tiMainString                = "W25-40 - W05-40"
  cplot3 = gsn_csm_contour_map(wks, diff3, opts2)   
  iplot = gsn_csm_contour(wks,ice0,res_ice)
  overlay(cplot3,iplot)
  plot2(3) = cplot3

;;;;;;;;;;;;;
; Plot 5 
;;;;;;;;;;;;;
  opts2@tiMainString                = "W50-40 - W05-40"
  cplot1 = gsn_csm_contour_map(wks, diff4, opts2)    
  iplot = gsn_csm_contour(wks,ice0,res_ice)
  overlay(cplot1,iplot)
  plot2(4) = cplot1

;;;;;;;;;;;;;
; Plot final - panel plot set 
;;;;;;;;;;;;; 
;  pnlres@txString                   = varcode+ " WRF Denmark Strait comparison: "+date
  gsn_panel(wks,(/plot2/),(/1,5/),pnlres)               ; create final panel plot

; Finally - make plot
print("converting plot to png")
delete(wks)
system("convert -trim -border 10 -bordercolor white -density 300 "+  \
         "-rotate -90 -trim -border 10 "+fout2+".ps "+fout2+".png")

delete([/opts1,opts2/])

;;;;;;;;;;;;;;;;;;;;;; END script
end
